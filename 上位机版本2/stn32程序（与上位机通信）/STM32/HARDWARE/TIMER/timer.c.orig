#include "timer.h"
#include "oled.h"
//////////////////////////////////////////////////////////////////////////////////
//本程序只供学习使用，未经作者许可，不得用于其它任何用途
//Mini STM32开发板
//通用定时器 驱动代码
//正点原子@ALIENTEK
//技术论坛:www.openedv.com
//修改日期:2010/12/03
//版本：V1.0
//版权所有，盗版必究。
//Copyright(C) 正点原子 2009-2019
//All rights reserved
//////////////////////////////////////////////////////////////////////////////////


//通用定时器中断初始化
//这里时钟选择为APB1的2倍，而APB1为36M
//arr：自动重装值。
//psc：时钟预分频数
//这里使用的是定时器3!

u32 time50ms=0;		//50ms  时间片
u8 dealFlag=0;
u32 times=0;
void TimeInit()

{
    TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
    NVIC_InitTypeDef NVIC_InitStructure;

//打开相应的时钟
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);


//清除TIM3的中断待处理位:TIM 中断源
    TIM_ClearITPendingBit(TIM3,TIM_IT_Update);


//设置定时器TIM_TimeBaseInit初始化定时器的时钟基数
    TIM_TimeBaseStructure.TIM_Period = 2000 -1;
    TIM_TimeBaseStructure.TIM_Prescaler = 36000 -1;
    TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
    TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
    TIM_TimeBaseInit(TIM3, & TIM_TimeBaseStructure);


//使能指定的TIM中断
    TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE );


//使能TIM定时器
    TIM_Cmd(TIM3, ENABLE);


//设置NVIC
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
    NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
}


//TIM3中断响应函数
void TIM3_IRQHandler(void)
{
//判断是否发生中断
if(TIM_GetITStatus(TIM3, TIM_IT_Update) == SET)
{
//清除EXTI线路挂起位
TIM_ClearITPendingBit(TIM3,TIM_IT_Update);

            dealFlag++;
            if(dealFlag==2)
                dealFlag=0;
            OLED_Clear();
}
}











